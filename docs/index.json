{"repository_name":"github.com/vnbrs/burocracia.cr","body":"# burocracia.cr : all Brazilian burocracias solved [![Build Status](https://travis-ci.org/vnbrs/burocracia.cr.svg?branch=master)](https://travis-ci.org/vnbrs/burocracia.cr)\n\nburocracia.cr is the dependecyless Crystal shard to validate, generate and format Brazilian burocracias such as CPF, CNPJ and CEP.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  burocracia:\n    github: vnbrs/burocracia.cr\n```\n\n## Usage\n\n```crystal\nrequire \"burocracia\"\n\nBurocracia::CEP.generate\n=> \"23230133\"\n\nBurocracia::CEP.generate(format: true)\n=> \"71946-192\"\n\nBurocracia::CEP.valid? \"80210130\"\n=> true\n\nBurocracia::CEP.valid? \"80210-130\"\n=> true\n```\n\nRead the full documentation [here](https://vnbrs.github.io/burocracia.cr/Burocracia).\n\n## Contributing\n\n1. Fork it ( https://github.com/vnbrs/burocracia.cr/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [vnbrs](https://github.com/vnbrs) Vinicius Brasil - creator, maintainer\n","program":{"html_id":"github.com/vnbrs/burocracia.cr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/vnbrs/burocracia.cr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia","path":"Burocracia.html","kind":"module","full_name":"Burocracia","name":"Burocracia","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"burocracia/sanitizer.cr","line_number":1,"url":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/sanitizer.cr"},{"filename":"burocracia/generator.cr","line_number":1,"url":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/generator.cr"},{"filename":"burocracia/cep.cr","line_number":4,"url":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cep.cr"},{"filename":"burocracia/cpf.cr","line_number":4,"url":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cpf.cr"},{"filename":"burocracia/version.cr","line_number":1,"url":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/version.cr"},{"filename":"burocracia.cr","line_number":3,"url":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia.cr"}],"repository_name":"github.com/vnbrs/burocracia.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia/CEP","path":"Burocracia/CEP.html","kind":"module","full_name":"Burocracia::CEP","name":"CEP","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"burocracia/cep.cr","line_number":6,"url":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cep.cr"}],"repository_name":"github.com/vnbrs/burocracia.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"BLACKLIST","value":"[\"12345678\", \"87654321\"]","doc":null,"summary":null},{"name":"FORMATTED_REGEX","value":"/^[0-9]{5}-[0-9]{3}$/i","doc":null,"summary":null},{"name":"UNFORMATTED_REGEX","value":"/^[0-9]{8}$/i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia/CEP","kind":"module","full_name":"Burocracia::CEP","name":"CEP"},{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia/Sanitizer","kind":"module","full_name":"Burocracia::Sanitizer","name":"Sanitizer"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia","kind":"module","full_name":"Burocracia","name":"Burocracia"},"doc":"The CEP module offers methods to validate, generate and format Brazilian post codes.","summary":"<p>The CEP module offers methods to validate, generate and format Brazilian post codes.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"format(cep:String)-instance-method","html_id":"format(cep:String)-instance-method","name":"format","doc":"Formats a CEP using the pattern `XXXXX-XXX`.","summary":"<p>Formats a CEP using the pattern <code>XXXXX-XXX</code>.</p>","abstract":false,"args":[{"name":"cep","doc":null,"default_value":"","external_name":"cep","restriction":"String"}],"args_string":"(cep : String)","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cep.cr#L42","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cep.cr#L42","def":{"name":"format","args":[{"name":"cep","doc":null,"default_value":"","external_name":"cep","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if formatted?(cep)\n  return cep\nend\n\"#{cep[0..4]}-#{cep[5..7]}\"\n"}},{"id":"formatted?(cep:String)-instance-method","html_id":"formatted?(cep:String)-instance-method","name":"formatted?","doc":"Checks whether a CEP is formatted correctly or not.","summary":"<p>Checks whether a CEP is formatted correctly or not.</p>","abstract":false,"args":[{"name":"cep","doc":null,"default_value":"","external_name":"cep","restriction":"String"}],"args_string":"(cep : String)","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cep.cr#L36","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cep.cr#L36","def":{"name":"formatted?","args":[{"name":"cep","doc":null,"default_value":"","external_name":"cep","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (cep =~ FORMATTED_REGEX).nil?\n  return false\nend\ntrue\n"}},{"id":"generate(format:Bool=false)-instance-method","html_id":"generate(format:Bool=false)-instance-method","name":"generate","doc":"Generates a randomic valid CEP.\n\nIf you want to get a formatted new CEP, you can pass an argument to the format\nparameter.","summary":"<p>Generates a randomic valid CEP.</p>","abstract":false,"args":[{"name":"format","doc":null,"default_value":"false","external_name":"format","restriction":"Bool"}],"args_string":"(format : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cep.cr#L29","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cep.cr#L29","def":{"name":"generate","args":[{"name":"format","doc":null,"default_value":"false","external_name":"format","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"generated = Burocracia::Generator.random_numbers(size: 8)\nif !(valid?(generated))\n  generated = generate(format)\nend\nformat ? format(generated) : generated\n"}},{"id":"valid?(cep:String)-instance-method","html_id":"valid?(cep:String)-instance-method","name":"valid?","doc":"Returns whether a CEP is valid or not.\n\nNOTE: This will not fetch the CEP in the Correios database to check the existance.","summary":"<p>Returns whether a CEP is valid or not.</p>","abstract":false,"args":[{"name":"cep","doc":null,"default_value":"","external_name":"cep","restriction":"String"}],"args_string":"(cep : String)","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cep.cr#L17","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cep.cr#L17","def":{"name":"valid?","args":[{"name":"cep","doc":null,"default_value":"","external_name":"cep","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sanitized = sanitize(cep)\nif BLACKLIST.includes?(sanitized)\n  return false\nend\nif sanitized.chars.uniq.size == 1\n  return false\nend\nif (cep =~ (FORMATTED_REGEX + UNFORMATTED_REGEX)).nil?\n  return false\nend\ntrue\n"}}],"macros":[],"types":[]},{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia/CPF","path":"Burocracia/CPF.html","kind":"module","full_name":"Burocracia::CPF","name":"CPF","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"burocracia/cpf.cr","line_number":6,"url":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cpf.cr"}],"repository_name":"github.com/vnbrs/burocracia.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"BLACKLIST","value":"[\"12345678901\", \"1235678999\", \"12345678900\"]","doc":null,"summary":null},{"name":"FORMATTED_REGEX","value":"/^[0-9]{3}.[0-9]{3}.[0-9]{3}-[0-9]{2}$/i","doc":null,"summary":null},{"name":"UNFORMATTED_REGEX","value":"/^[0-9]{11}$/i","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia/CPF","kind":"module","full_name":"Burocracia::CPF","name":"CPF"},{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia/Sanitizer","kind":"module","full_name":"Burocracia::Sanitizer","name":"Sanitizer"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia","kind":"module","full_name":"Burocracia","name":"Burocracia"},"doc":"The CPF module offers methods to validate, generate and format Brazilian CPFs.","summary":"<p>The CPF module offers methods to validate, generate and format Brazilian CPFs.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"format(cpf:String)-instance-method","html_id":"format(cpf:String)-instance-method","name":"format","doc":"Formats a CPF using the pattern `XXX.XXX.XXX-XX`.","summary":"<p>Formats a CPF using the pattern <code>XXX.XXX.XXX-XX</code>.</p>","abstract":false,"args":[{"name":"cpf","doc":null,"default_value":"","external_name":"cpf","restriction":"String"}],"args_string":"(cpf : String)","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cpf.cr#L49","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cpf.cr#L49","def":{"name":"format","args":[{"name":"cpf","doc":null,"default_value":"","external_name":"cpf","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if formatted?(cpf)\n  return cpf\nend\n\"#{cpf[0..2]}.#{cpf[3..5]}.#{cpf[6..8]}-#{cpf[9..10]}\"\n"}},{"id":"formatted?(cpf:String)-instance-method","html_id":"formatted?(cpf:String)-instance-method","name":"formatted?","doc":"Checks whether a CPF is formatted correctly or not.","summary":"<p>Checks whether a CPF is formatted correctly or not.</p>","abstract":false,"args":[{"name":"cpf","doc":null,"default_value":"","external_name":"cpf","restriction":"String"}],"args_string":"(cpf : String)","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cpf.cr#L43","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cpf.cr#L43","def":{"name":"formatted?","args":[{"name":"cpf","doc":null,"default_value":"","external_name":"cpf","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (cpf =~ FORMATTED_REGEX).nil?\n  return false\nend\ntrue\n"}},{"id":"generate(format:Bool=false)-instance-method","html_id":"generate(format:Bool=false)-instance-method","name":"generate","doc":"Generates a randomic valid CPF.\n\nIf you want to get a formatted new CPF, you can pass an argument to the format\nparameter.","summary":"<p>Generates a randomic valid CPF.</p>","abstract":false,"args":[{"name":"format","doc":null,"default_value":"false","external_name":"format","restriction":"Bool"}],"args_string":"(format : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cpf.cr#L36","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cpf.cr#L36","def":{"name":"generate","args":[{"name":"format","doc":null,"default_value":"false","external_name":"format","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"generated = Burocracia::Generator.random_numbers(size: 9)\n1.upto(2) do |i|\n  generated = generated + calculate_check_digit(cpf: generated, digit: i).to_s\nend\nformat ? format(generated) : generated\n"}},{"id":"valid?(cpf:String)-instance-method","html_id":"valid?(cpf:String)-instance-method","name":"valid?","doc":"Returns whether a CPF is valid or not.\n\nNOTE: This *will not* fetch the CPF in the Receita Federal database to check the existance.","summary":"<p>Returns whether a CPF is valid or not.</p>","abstract":false,"args":[{"name":"cpf","doc":null,"default_value":"","external_name":"cpf","restriction":"String"}],"args_string":"(cpf : String)","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cpf.cr#L17","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/cpf.cr#L17","def":{"name":"valid?","args":[{"name":"cpf","doc":null,"default_value":"","external_name":"cpf","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sanitized = sanitize(cpf)\nif BLACKLIST.includes?(sanitized)\n  return false\nend\nif sanitized.chars.uniq.size == 1\n  return false\nend\nif (cpf =~ (FORMATTED_REGEX + UNFORMATTED_REGEX)).nil?\n  return false\nend\nfirst_check_digit = calculate_check_digit(cpf: sanitized, digit: 1)\nif sanitized[9].to_i != first_check_digit\n  return false\nend\nsecond_check_digit = calculate_check_digit(cpf: sanitized, digit: 2)\nif sanitized[10].to_i != second_check_digit\n  return false\nend\ntrue\n"}}],"macros":[],"types":[]},{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia/Generator","path":"Burocracia/Generator.html","kind":"module","full_name":"Burocracia::Generator","name":"Generator","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"burocracia/generator.cr","line_number":3,"url":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/generator.cr"}],"repository_name":"github.com/vnbrs/burocracia.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia/Generator","kind":"module","full_name":"Burocracia::Generator","name":"Generator"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia","kind":"module","full_name":"Burocracia","name":"Burocracia"},"doc":"Module responsible for generating randomic low-level information","summary":"<p>Module responsible for generating randomic low-level information</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"random_numbers(size,randomifier=Random)-instance-method","html_id":"random_numbers(size,randomifier=Random)-instance-method","name":"random_numbers","doc":"Generates a string with random numbers.\n\n```crystal\nBurocracia::Generator.random_numbers(size: 3)\n=> \"139\"\n```\n\nIf needed, you can pass your own `Random` instance:\n\n```crystal\nBurocracia::Generator.random_numbers(size: 5, randomifier: MyRandomClass)\n=> \"002\"\n```\n\nNOTE: The randomifier class or module must implement a function called `rand`\nthat accepts a `Range` and returns an `Object` with a `to_s` method.","summary":"<p>Generates a string with random numbers.</p>","abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""},{"name":"randomifier","doc":null,"default_value":"Random","external_name":"randomifier","restriction":""}],"args_string":"(size, randomifier = <span class=\"t\">Random</span>)","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/generator.cr#L22","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/generator.cr#L22","def":{"name":"random_numbers","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""},{"name":"randomifier","doc":null,"default_value":"Random","external_name":"randomifier","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"generated = \"\"\nloop do\n  generated = generated + (randomifier.rand(0..9)).to_s\n  if generated.size == size\n    break\n  end\nend\ngenerated\n"}}],"macros":[],"types":[]},{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia/Sanitizer","path":"Burocracia/Sanitizer.html","kind":"module","full_name":"Burocracia::Sanitizer","name":"Sanitizer","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"burocracia/sanitizer.cr","line_number":3,"url":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/sanitizer.cr"}],"repository_name":"github.com/vnbrs/burocracia.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia/Sanitizer","kind":"module","full_name":"Burocracia::Sanitizer","name":"Sanitizer"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/vnbrs/burocracia.cr/Burocracia","kind":"module","full_name":"Burocracia","name":"Burocracia"},"doc":"Module resposible to normalize string inputs.","summary":"<p>Module resposible to normalize string inputs.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"sanitize(str:String)-instance-method","html_id":"sanitize(str:String)-instance-method","name":"sanitize","doc":"Normalizes and sanitizes a string input, removing anything\nbut numbers.\n\n```crystal\nCEP::Sanitizer.sanitize(\"108.291.921-23\")\n=> \"10829192123\"\n```","summary":"<p>Normalizes and sanitizes a string input, removing anything but numbers.</p>","abstract":false,"args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"args_string":"(str : String)","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/sanitizer.cr#L13","source_link":"https://github.com/vnbrs/burocracia.cr/blob/d79164846a144a90caf64ab8bb70b135d4011d9e/src/burocracia/sanitizer.cr#L13","def":{"name":"sanitize","args":[{"name":"str","doc":null,"default_value":"","external_name":"str","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"str.delete(\"^0-9\")"}}],"macros":[],"types":[]}]}]}}